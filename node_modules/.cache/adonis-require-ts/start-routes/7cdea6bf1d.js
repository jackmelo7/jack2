"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Route_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Route"));
Route_1.default.group(() => {
    Route_1.default.post('/add', 'CustomersController.add');
    Route_1.default.delete('/del', 'CustomersController.del');
    Route_1.default.put('/update', 'CustomersController.update');
    Route_1.default.get('/read', 'CustomersController.read');
    Route_1.default.post('/search', 'CustomersController.search');
    Route_1.default.get('/sortname', 'CustomersController.sortname');
    Route_1.default.get('/sortage', 'CustomersController.sortage');
    Route_1.default.get('/sortyearofstarting', 'CustomersController.sortyearofstarting');
    Route_1.default.get('/hotelName', 'CustomersController.hotelName');
    Route_1.default.get('/count', 'CustomersController.count');
}).prefix('pre');
Route_1.default.group(() => {
    Route_1.default.post('/create', 'HotelsController.create');
    Route_1.default.delete('/delete', 'HotelsController.delete');
    Route_1.default.put('/updating', 'HotelsController.updating');
    Route_1.default.get('/reading', 'HotelsController.reading');
    Route_1.default.post('/searching', 'HotelsController.searching');
    Route_1.default.get('/sorthotelname', 'HotelsController.sorthotelname');
    Route_1.default.get('/sortplace', 'HotelsController.sortplace');
    Route_1.default.get('/sortaddress', 'HotelsController.sortaddress');
    Route_1.default.get('/sortbuiltyear', 'HotelsController.sortbuiltyear');
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUEsb0ZBQTBDO0FBRTFDLGVBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFO0lBQ2IsZUFBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUMseUJBQXlCLENBQUMsQ0FBQTtJQUM1QyxlQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBQyx5QkFBeUIsQ0FBQyxDQUFBO0lBQzlDLGVBQUssQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFDLDRCQUE0QixDQUFDLENBQUE7SUFDakQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUMsMEJBQTBCLENBQUMsQ0FBQTtJQUM3QyxlQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBQyw0QkFBNEIsQ0FBQyxDQUFBO0lBQ2xELGVBQUssQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFDLDhCQUE4QixDQUFDLENBQUE7SUFDckQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUMsNkJBQTZCLENBQUMsQ0FBQTtJQUNuRCxlQUFLLENBQUMsR0FBRyxDQUFDLHFCQUFxQixFQUFDLHdDQUF3QyxDQUFDLENBQUE7SUFDekUsZUFBSyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUMsK0JBQStCLENBQUMsQ0FBQTtJQUN2RCxlQUFLLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBQywyQkFBMkIsQ0FBQyxDQUFBO0FBRy9DLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQTtBQU9oQixlQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRTtJQUNiLGVBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFDLHlCQUF5QixDQUFDLENBQUE7SUFDL0MsZUFBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUMseUJBQXlCLENBQUMsQ0FBQTtJQUNqRCxlQUFLLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBQywyQkFBMkIsQ0FBQyxDQUFBO0lBQ2xELGVBQUssQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFDLDBCQUEwQixDQUFDLENBQUE7SUFDaEQsZUFBSyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUMsNEJBQTRCLENBQUMsQ0FBQTtJQUNyRCxlQUFLLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFDLGdDQUFnQyxDQUFDLENBQUE7SUFDNUQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUMsNEJBQTRCLENBQUMsQ0FBQTtJQUNwRCxlQUFLLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBQyw4QkFBOEIsQ0FBQyxDQUFBO0lBQ3hELGVBQUssQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUMsZ0NBQWdDLENBQUMsQ0FBQTtBQUM1RCxDQUFDLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5pbXBvcnQgUm91dGUgZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9Sb3V0ZSdcblxuUm91dGUuZ3JvdXAoKCkgPT4ge1xuICAgIFJvdXRlLnBvc3QoJy9hZGQnLCdDdXN0b21lcnNDb250cm9sbGVyLmFkZCcpXG4gICAgUm91dGUuZGVsZXRlKCcvZGVsJywnQ3VzdG9tZXJzQ29udHJvbGxlci5kZWwnKVxuICAgIFJvdXRlLnB1dCgnL3VwZGF0ZScsJ0N1c3RvbWVyc0NvbnRyb2xsZXIudXBkYXRlJylcbiAgICBSb3V0ZS5nZXQoJy9yZWFkJywnQ3VzdG9tZXJzQ29udHJvbGxlci5yZWFkJylcbiAgICBSb3V0ZS5wb3N0KCcvc2VhcmNoJywnQ3VzdG9tZXJzQ29udHJvbGxlci5zZWFyY2gnKVxuICAgIFJvdXRlLmdldCgnL3NvcnRuYW1lJywnQ3VzdG9tZXJzQ29udHJvbGxlci5zb3J0bmFtZScpXG4gICAgUm91dGUuZ2V0KCcvc29ydGFnZScsJ0N1c3RvbWVyc0NvbnRyb2xsZXIuc29ydGFnZScpXG4gICAgUm91dGUuZ2V0KCcvc29ydHllYXJvZnN0YXJ0aW5nJywnQ3VzdG9tZXJzQ29udHJvbGxlci5zb3J0eWVhcm9mc3RhcnRpbmcnKVxuICAgIFJvdXRlLmdldCgnL2hvdGVsTmFtZScsJ0N1c3RvbWVyc0NvbnRyb2xsZXIuaG90ZWxOYW1lJylcbiAgICBSb3V0ZS5nZXQoJy9jb3VudCcsJ0N1c3RvbWVyc0NvbnRyb2xsZXIuY291bnQnKVxuICBcbiAgICBcbiAgICB9KS5wcmVmaXgoJ3ByZScpXG5cblxuXG5cblxuXG4gICAgUm91dGUuZ3JvdXAoKCkgPT4ge1xuICAgICAgICBSb3V0ZS5wb3N0KCcvY3JlYXRlJywnSG90ZWxzQ29udHJvbGxlci5jcmVhdGUnKVxuICAgICAgICBSb3V0ZS5kZWxldGUoJy9kZWxldGUnLCdIb3RlbHNDb250cm9sbGVyLmRlbGV0ZScpXG4gICAgICAgIFJvdXRlLnB1dCgnL3VwZGF0aW5nJywnSG90ZWxzQ29udHJvbGxlci51cGRhdGluZycpXG4gICAgICAgIFJvdXRlLmdldCgnL3JlYWRpbmcnLCdIb3RlbHNDb250cm9sbGVyLnJlYWRpbmcnKVxuICAgICAgICBSb3V0ZS5wb3N0KCcvc2VhcmNoaW5nJywnSG90ZWxzQ29udHJvbGxlci5zZWFyY2hpbmcnKVxuICAgICAgICBSb3V0ZS5nZXQoJy9zb3J0aG90ZWxuYW1lJywnSG90ZWxzQ29udHJvbGxlci5zb3J0aG90ZWxuYW1lJylcbiAgICAgICAgUm91dGUuZ2V0KCcvc29ydHBsYWNlJywnSG90ZWxzQ29udHJvbGxlci5zb3J0cGxhY2UnKVxuICAgICAgICBSb3V0ZS5nZXQoJy9zb3J0YWRkcmVzcycsJ0hvdGVsc0NvbnRyb2xsZXIuc29ydGFkZHJlc3MnKVxuICAgICAgICBSb3V0ZS5nZXQoJy9zb3J0YnVpbHR5ZWFyJywnSG90ZWxzQ29udHJvbGxlci5zb3J0YnVpbHR5ZWFyJylcbiAgICAgICAgfSlcbiAgICBcblxuIl19